{"version":3,"sources":["hooks/redux.ts","http/index.ts","services/AuthService.ts","services/UserService.ts","store/slices/actionSlice.ts","store/slices/userSlice.ts","store/slices/ActionCreators.ts","components/Login.tsx","components/Menu.tsx","constants.ts","components/EndBonusDialog.tsx","components/EndDialog.tsx","pages/EndPage.tsx","components/Game.tsx","components/App.tsx","store/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","API_URL","$api","axios","create","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","concat","localStorage","getItem","response","async","originalRequest","error","status","_isRetry","get","setItem","data","accessToken","e","console","log","AuthService","login","name","password","post","registration","logout","refresh","UserService","fetchUsers","postUserMoney","money","postUserData","setBonusFlag","flag","actionSlice","createSlice","initialState","isGame","isLoading","isAuth","reducers","setAuth","state","action","payload","setGame","setLoading","userSlice","user","setUser","setUserMoney","actions","_error$response5","_error$response5$data","isAxiosError","message","Login","setName","useState","setPassword","navigate","useNavigate","dispatch","_jsxs","style","display","flexDirection","alignItems","children","_jsx","TextField","label","type","variant","value","onChange","target","backgroundColor","width","margin","gap","marginBottom","justifyContent","marginTop","Button","onClick","handleLogin","_error$response","_error$response$data","handleRegistration","_error$response2","_error$response2$data","buttonMenuBg","fontWeight","height","color","Menu","useEffect","_error$response4","_error$response4$data","_Fragment","maxWidth","padding","Typography","fontSize","textAlign","Grid","container","spacing","item","xs","fullWidth","handleGameClick","window","location","href","handleLogout","removeItem","_error$response3","_error$response3$data","CANVAS_WIDTH","CANVAS_HEIGHT","CLOUDS","Image","src","BIRD","GROUND","PIPE_WIDTH","PIPE_GAP","EndBonusDialog","props","labels","inputs","setInputs","Array","from","length","_","index","Dialog","open","showDialog","disableEscapeKeyDown","DialogContent","DialogContentText","id","map","input","autoFocus","event","handleChange","newInputs","DialogActions","handleSubmitClick","_error$response6","_error$response6$data","_error$response7","_error$response7$data","EndDialog","score","bestScore","handleToMainMenuClick","handleRetryClick","reload","EndPage","_ref","showModal","bonusFlag","groundX","birdY","birdYSpeed","pipeGapBottomY","pipeX","constants","parseInt","checkCollision","circle","rect","x","radius","y","hasStarted","hasFinished","canGetScore","Game","setShowModal","canvas","useRef","jump","useEventListener","key","code","current","context","getContext","setInterval","touchedPipe","birdHitbox","birdX","lowerPipe","toString","fillStyle","fillRect","drawImage","draw","Math","random","font","fillText","onKeyPress","ref","App","HashRouter","basename","Routes","Route","path","element","rootReducer","combineReducers","store","configureStore","reducer","document","getElementById","createRoot","render","Provider"],"mappings":"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","file":"static/js/main.434026ba.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { AppDispatch, RootState } from '../store/store'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import axios from 'axios'\r\nimport { AuthResponse } from '../models/response/AuthResponse'\r\n\r\nexport const API_URL = `http://localhost:5000/api`\r\n\r\nconst $api = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: API_URL,\r\n})\r\n\r\n$api.interceptors.request.use(config => {\r\n\tconfig.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\r\n\treturn config\r\n})\r\n\r\n$api.interceptors.request.use(config => {\r\n\tconfig.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\r\n\treturn config\r\n})\r\n\r\n$api.interceptors.response.use(\r\n\tconfig => {\r\n\t\treturn config\r\n\t},\r\n\tasync error => {\r\n\t\tconst originalRequest = error.config\r\n\t\tif (\r\n\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\terror.response.status == 401 &&\r\n\t\t\terror.config &&\r\n\t\t\t!error.config._isRetry\r\n\t\t) {\r\n\t\t\toriginalRequest._isRetry = true\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t})\r\n\t\t\t\tlocalStorage.setItem('token', response.data.accessToken)\r\n\t\t\t\treturn $api.request(originalRequest)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log('НЕ АВТОРИЗОВАН')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow error\r\n\t}\r\n)\r\n\r\nexport default $api\r\n","import { AxiosResponse } from 'axios'\r\nimport $api from '../http'\r\nimport { AuthResponse } from '../models/response/AuthResponse'\r\n\r\nexport default class AuthService {\r\n\tstatic async login(\r\n\t\tname: string,\r\n\t\tpassword: string\r\n\t): Promise<AxiosResponse<AuthResponse>> {\r\n\t\treturn $api.post<AuthResponse>('/login', { name, password })\r\n\t}\r\n\r\n\tstatic async registration(\r\n\t\tname: string,\r\n\t\tpassword: string\r\n\t): Promise<AxiosResponse<AuthResponse>> {\r\n\t\treturn $api.post<AuthResponse>('/registration', { name, password })\r\n\t}\r\n\r\n\tstatic async logout(): Promise<void> {\r\n\t\treturn $api.post('/logout')\r\n\t}\r\n\r\n\tstatic async refresh(): Promise<AxiosResponse<AuthResponse>> {\r\n\t\treturn $api.get<AuthResponse>('/refresh')\r\n\t}\r\n}\r\n","import { AxiosResponse } from 'axios'\r\nimport $api from '../http'\r\nimport { Data, User } from '../models/User'\r\n\r\nexport default class UserService {\r\n\tstatic async fetchUsers(): Promise<AxiosResponse<User[]>> {\r\n\t\treturn $api.get<User[]>('/users')\r\n\t}\r\n\r\n\tstatic async postUserMoney(\r\n\t\tname: string,\r\n\t\tmoney: number\r\n\t): Promise<AxiosResponse<User>> {\r\n\t\treturn $api.post<User>('/money', { name, money })\r\n\t}\r\n\r\n\tstatic async postUserData(\r\n\t\tname: string,\r\n\t\tdata: Data\r\n\t): Promise<AxiosResponse<User>> {\r\n\t\treturn $api.post<User>('/data', { name, data })\r\n\t}\r\n\r\n\tstatic async setBonusFlag(\r\n\t\tname: string,\r\n\t\tflag: boolean\r\n\t): Promise<AxiosResponse<User>> {\r\n\t\treturn $api.post<User>('/flag', { name, flag })\r\n\t}\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ActionState } from '../../types'\r\n\r\nconst initialState: ActionState = {\r\n\tisGame: false,\r\n\tisLoading: false,\r\n\tisAuth: false,\r\n}\r\n\r\nexport const actionSlice = createSlice({\r\n\tname: 'action',\r\n\tinitialState: initialState,\r\n\treducers: {\r\n\t\tsetAuth(state, action) {\r\n\t\t\tstate.isAuth = action.payload\r\n\t\t},\r\n\t\tsetGame(state, action) {\r\n\t\t\tstate.isGame = action.payload\r\n\t\t},\r\n\t\tsetLoading(state, action) {\r\n\t\t\tstate.isLoading = action.payload\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default actionSlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { UserState } from '../../types'\r\n\r\nconst initialState: UserState = {\r\n\tuser: null,\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n\tname: 'user',\r\n\tinitialState: initialState,\r\n\treducers: {\r\n\t\tsetUser(state, action) {\r\n\t\t\tstate.user = action.payload\r\n\t\t},\r\n\t\tsetUserMoney(state, action) {\r\n\t\t\tif (state.user) {\r\n\t\t\t\tstate.user.money = action.payload\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default userSlice.reducer\r\n","import axios from 'axios'\r\nimport { API_URL } from '../../http'\r\nimport { Data, User } from '../../models/User'\r\nimport { AuthResponse } from '../../models/response/AuthResponse'\r\nimport AuthService from '../../services/AuthService'\r\nimport UserService from '../../services/UserService'\r\nimport { AppDispatch } from '../store'\r\nimport { actionSlice } from './actionSlice'\r\nimport { userSlice } from './userSlice'\r\n\r\nconst { setUser } = userSlice.actions\r\nconst { setAuth } = actionSlice.actions\r\n\r\nexport const login =\r\n\t(name: string, password: string) => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tconst response = await AuthService.login(name, password)\r\n\t\t\tlocalStorage.setItem('token', response.data.accessToken)\r\n\t\t\tdispatch(setAuth(true))\r\n\t\t\tdispatch(setUser(response.data.user))\r\n\t\t} catch (error: unknown) {\r\n\t\t\tif (axios.isAxiosError(error)) {\r\n\t\t\t\tconsole.log(error.response?.data?.message)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Unknown error occurred')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\nexport const registration =\r\n\t(name: string, password: string) => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tconst response = await AuthService.registration(name, password)\r\n\t\t\tlocalStorage.setItem('token', response.data.accessToken)\r\n\t\t\tdispatch(setAuth(true))\r\n\t\t\tdispatch(setUser(response.data.user))\r\n\t\t} catch (error: unknown) {\r\n\t\t\tif (axios.isAxiosError(error)) {\r\n\t\t\t\tconsole.log(error.response?.data?.message)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Unknown error occurred')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\nexport const logout = () => async (dispatch: AppDispatch) => {\r\n\ttry {\r\n\t\tAuthService.logout()\r\n\t\tlocalStorage.removeItem('token')\r\n\t\tdispatch(setAuth(false))\r\n\t\tdispatch(setUser({} as User))\r\n\t\twindow.location.href = '/flappy-bird-app/login'\r\n\t} catch (error: unknown) {\r\n\t\tif (axios.isAxiosError(error)) {\r\n\t\t\tconsole.log(error.response?.data?.message)\r\n\t\t} else {\r\n\t\t\tconsole.log('Unknown error occurred')\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const checkAuth = () => async (dispatch: AppDispatch) => {\r\n\ttry {\r\n\t\tconst response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\tlocalStorage.setItem('token', response.data.accessToken)\r\n\t\tdispatch(setAuth(true))\r\n\t\tdispatch(setUser(response.data.user))\r\n\t} catch (error: unknown) {\r\n\t\tif (axios.isAxiosError(error)) {\r\n\t\t\tconsole.log(error.response?.data?.message)\r\n\t\t} else {\r\n\t\t\tconsole.log('Unknown error occurred')\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const postUserMoney =\r\n\t(name: string, money: number) => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tawait UserService.postUserMoney(name, money)\r\n\t\t} catch (error: unknown) {\r\n\t\t\tif (axios.isAxiosError(error)) {\r\n\t\t\t\tconsole.log(error.response?.data?.message)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Unknown error occurred')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\nexport const postUserData =\r\n\t(name: string, data: Data) => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tawait UserService.postUserData(name, data)\r\n\t\t} catch (error: unknown) {\r\n\t\t\tif (axios.isAxiosError(error)) {\r\n\t\t\t\tconsole.log(error.response?.data?.message)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Unknown error occurred')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\nexport const setBonusFlag =\r\n\t(name: string, flag: boolean) => async (dispatch: AppDispatch) => {\r\n\t\ttry {\r\n\t\t\tawait UserService.setBonusFlag(name, flag)\r\n\t\t} catch (error: unknown) {\r\n\t\t\tif (axios.isAxiosError(error)) {\r\n\t\t\t\tconsole.log(error.response?.data?.message)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Unknown error occurred')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n","import { Button, TextField } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useAppDispatch } from '../hooks/redux'\r\nimport { login, registration } from '../store/slices/ActionCreators'\r\n\r\nconst Login: React.FC = () => {\r\n\tconst [name, setName] = useState<string>('')\r\n\tconst [password, setPassword] = useState<string>('')\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tconst handleLogin = () => {\r\n\t\tnavigate('/menu')\r\n\t\tdispatch(login(name, password))\r\n\t}\r\n\r\n\tconst handleRegistration = () => {\r\n\t\tnavigate('/menu')\r\n\t\tdispatch(registration(name, password))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\r\n\t\t>\r\n\t\t\t<TextField\r\n\t\t\t\tlabel='Имя'\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvariant='outlined'\r\n\t\t\t\tvalue={name}\r\n\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n\t\t\t\t\twidth: '300px',\r\n\t\t\t\t\tmargin: '20px',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tlabel='Пароль'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tvariant='outlined'\r\n\t\t\t\tvalue={password}\r\n\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\tstyle={{ backgroundColor: 'rgba(0, 0, 255, 0.2)', width: '300px' }}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\tgap: '10px',\r\n\t\t\t\t\tmarginBottom: '10px',\r\n\t\t\t\t\tjustifyContent: 'space-around',\r\n\t\t\t\t\tmarginTop: '30px',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tonClick={handleLogin}\r\n\t\t\t\t\tstyle={{ backgroundColor: 'rgba(0, 0, 255, 0.2)' }}\r\n\t\t\t\t>\r\n\t\t\t\t\tЛогин\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tonClick={handleRegistration}\r\n\t\t\t\t\tstyle={{ backgroundColor: 'rgba(0, 0, 255, 0.2)' }}\r\n\t\t\t\t>\r\n\t\t\t\t\tРегистрация\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Login\r\n","import { Button, Grid, Typography } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux'\r\nimport { checkAuth, logout } from '../store/slices/ActionCreators'\r\nimport { actionSlice } from '../store/slices/actionSlice'\r\n\r\nconst buttonMenuBg = {\r\n\tfontWeight: '900',\r\n\theight: '100px',\r\n\tbackgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n\tcolor: 'black',\r\n}\r\n\r\nconst { setGame } = actionSlice.actions\r\n\r\nconst Menu: React.FC = () => {\r\n\tconst user = useAppSelector((state: any) => state.userSlice.user)\r\n\tconst { isAuth } = useAppSelector((state: any) => state.actionSlice)\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (localStorage.getItem('token')) {\r\n\t\t\tdispatch(checkAuth())\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\r\n\tconst handleGameClick = () => {\r\n\t\tdispatch(setGame(true))\r\n\t\twindow.location.href = '/flappy-bird-app/game'\r\n\t}\r\n\r\n\tconst handleLogout = () => {\r\n\t\tdispatch(logout())\r\n\t\twindow.location.href = '/flappy-bird-app/login'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isAuth ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\tmaxWidth: '300px',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div style={{ padding: '40px 0' }}>\r\n\t\t\t\t\t\t<Typography variant='h5' style={{ fontWeight: '900' }}>\r\n\t\t\t\t\t\t\tЗдравствуйте, {user.name ? user.name : 'asd'}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\t\t\tfontWeight: '400',\r\n\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tУ вас {user.money ? user.money : 'пока что 0'} монет\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Grid container spacing={6}>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Button variant='contained' fullWidth style={buttonMenuBg}>\r\n\t\t\t\t\t\t\t\tМагазин (В разработке)\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handleGameClick}\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tstyle={buttonMenuBg}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tИграть\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Button variant='contained' fullWidth style={buttonMenuBg}>\r\n\t\t\t\t\t\t\t\tИнформация (В разработке)\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handleLogout}\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tstyle={buttonMenuBg}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tВыйти\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t'LOADER'\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Menu\r\n","export const INTERVAL = 20\nexport const CANVAS_WIDTH = 300\nexport const CANVAS_HEIGHT = 450\n\n// clouds\nexport const CLOUDS = new Image()\nCLOUDS.src = './images/clouds.png'\nexport const CLOUDS_HEIGHT = 280\nexport const CLOUDS_WIDTH = 300\nexport const CLOUDS_X = 0\nexport const CLOUDS_Y = 0\n\n// bird\nexport const BIRD = new Image()\nBIRD.src = './images/bird.png'\nexport const BIRD_HEIGHT = 50\nexport const BIRD_WIDTH = 50\n\n// ground\nexport const GROUND = new Image()\nGROUND.src = './images/ground.png'\nexport const GROUND_HEIGHT = 200\nexport const GROUND_WIDTH = CANVAS_WIDTH\nexport const GROUND_Y = CANVAS_HEIGHT - GROUND_HEIGHT\nexport const HEIGHT_GROUND = 59\n\n// pipes\nexport const PIPE_WIDTH = 40\nexport const PIPE_HEIGHT = CANVAS_HEIGHT / 2\nexport const PIPE_GAP = CANVAS_HEIGHT / 2 - HEIGHT_GROUND - 50\n\n// movements\nexport const JUMP_SPEED = -200\nexport const FALL_SPEED = -800\nexport const SPEED = 2\n","import {\r\n\tButton,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogContentText,\r\n\tTextField,\r\n} from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux'\r\nimport { Data } from '../models/User'\r\nimport {\r\n\tpostUserData,\r\n\tpostUserMoney,\r\n\tsetBonusFlag,\r\n} from '../store/slices/ActionCreators'\r\n\r\nconst buttonMenuBg = {\r\n\tfontWeight: '900',\r\n\theight: '50px',\r\n\tmargin: '0 15px',\r\n\tbackgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n\tcolor: 'black',\r\n}\r\n\r\nfunction EndBonusDialog(props: {\r\n\tshowDialog: boolean\r\n\tscore: number\r\n\tbestScore: number\r\n}) {\r\n\tconst labels: string[] = [\r\n\t\t'Эффективность работы',\r\n\t\t'Прогресс выполнения задач',\r\n\t\t'Качество работы',\r\n\t\t'Скорость достижения целей',\r\n\t\t'Уровень концентрации',\r\n\t\t'Соблюдение сроков',\r\n\t\t'Уровень удовлетворенности результатами',\r\n\t]\r\n\r\n\tconst [inputs, setInputs] = useState<Data>(\r\n\t\tArray.from({ length: labels.length }, (_, index) => ({\r\n\t\t\tlabel: `${labels[index]}`,\r\n\t\t\tvalue: '',\r\n\t\t}))\r\n\t)\r\n\r\n\tconst dispatch = useAppDispatch()\r\n\tconst user = useAppSelector((state: any) => state.userSlice.user)\r\n\r\n\tconst handleChange = (event: any, index: number) => {\r\n\t\tconst newInputs = [...inputs]\r\n\t\tnewInputs[index].value = event.target.value\r\n\t\tsetInputs(newInputs)\r\n\t}\r\n\r\n\tconst handleSubmitClick = () => {\r\n\t\tconsole.log(inputs)\r\n\t\tdispatch(postUserMoney(user.name, 10))\r\n\t\t//TODO: post запрос к серверу для сохранения показателей в БД\r\n\t\tdispatch(postUserData(user.name, inputs))\r\n\t\tdispatch(setBonusFlag(user.name, false))\r\n\t\twindow.location.href = '/flappy-bird-app'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={props.showDialog}\r\n\t\t\tdisableEscapeKeyDown\r\n\t\t\taria-labelledby='alert-dialog-title'\r\n\t\t\taria-describedby='alert-dialog-description'\r\n\t\t>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText id='alert-dialog-description'>\r\n\t\t\t\t\tУпс, похоже ты проиграл, но ничего заполни эту форму и получи\r\n\t\t\t\t\tгарантированный приз 10 очков ;)\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t\t{inputs.map((input, index) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tautoFocus={index === 0}\r\n\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\tid={`input${index + 1}`}\r\n\t\t\t\t\t\tlabel={input.label}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvalue={input.value}\r\n\t\t\t\t\t\tonChange={event => handleChange(event, index)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</DialogContent>\r\n\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={buttonMenuBg}\r\n\t\t\t\t\tonClick={handleSubmitClick}\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t>\r\n\t\t\t\t\tПодтвердить\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\nexport default EndBonusDialog\r\n","import {\n\tButton,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n} from '@material-ui/core'\nimport { useAppDispatch, useAppSelector } from '../hooks/redux'\nimport { postUserMoney } from '../store/slices/ActionCreators'\n\nconst buttonMenuBg = {\n\tfontWeight: '900',\n\theight: '50px',\n\tmargin: '0 15px',\n\tbackgroundColor: 'rgba(0, 0, 255, 0.2)',\n\tcolor: 'black',\n}\n\nfunction EndDialog(props: {\n\tshowDialog: boolean\n\tscore: number\n\tbestScore: number\n}) {\n\tconst dispatch = useAppDispatch()\n\tconst user = useAppSelector((state: any) => state.userSlice.user)\n\n\tconst handleToMainMenuClick = () => {\n\t\tdispatch(postUserMoney(user?.name, props.score))\n\t\twindow.location.href = '/flappy-bird-app/menu'\n\t}\n\n\tconst handleRetryClick = () => {\n\t\tdispatch(postUserMoney(user?.name, props.score))\n\t\twindow.location.reload()\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.showDialog}\n\t\t\tdisableEscapeKeyDown\n\t\t\taria-labelledby='alert-dialog-title'\n\t\t\taria-describedby='alert-dialog-description'\n\t\t>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id='alert-dialog-description'>\n\t\t\t\t\tРезультат: {props.score} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Лучший:{' '}\n\t\t\t\t\t{props.bestScore}\n\t\t\t\t</DialogContentText>\n\t\t\t</DialogContent>\n\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tstyle={buttonMenuBg}\n\t\t\t\t\tonClick={handleToMainMenuClick}\n\t\t\t\t\tcolor='primary'\n\t\t\t\t>\n\t\t\t\t\tВ главное меню\n\t\t\t\t</Button>\n\t\t\t\t<Button style={buttonMenuBg} onClick={handleRetryClick} color='primary'>\n\t\t\t\t\tПопробовать ещё\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n\nexport default EndDialog\n","import EndBonusDialog from '../components/EndBonusDialog'\r\nimport EndDialog from '../components/EndDialog'\r\nimport { useAppSelector } from '../hooks/redux'\r\n\r\nfunction EndPage({\r\n\tshowModal,\r\n\tscore,\r\n\tbestScore,\r\n}: {\r\n\tshowModal: boolean\r\n\tscore: number\r\n\tbestScore: number\r\n}) {\r\n\tconst user = useAppSelector(state => state.userSlice.user)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{user?.bonusFlag ? (\r\n\t\t\t\t<EndBonusDialog\r\n\t\t\t\t\tshowDialog={showModal}\r\n\t\t\t\t\tscore={score}\r\n\t\t\t\t\tbestScore={bestScore}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<EndDialog showDialog={showModal} score={score} bestScore={bestScore} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default EndPage\r\n","import useEventListener from '@use-it/event-listener'\nimport { useEffect, useRef, useState } from 'react'\nimport * as constants from '../constants'\nimport EndPage from '../pages/EndPage'\nimport { Circle, Rectangle } from '../types'\n\n// ground\nlet groundX = 0\n\n// bird\nlet birdX = 60\nlet birdY = 120\nlet birdYSpeed = 0\n\n// pipes\nlet pipeGapBottomY = constants.PIPE_HEIGHT\nlet pipeX = constants.CANVAS_WIDTH\n\n// score\nlet score: number = 0\nlet bestScore: number = parseInt(localStorage.getItem('bestScore') || '0')\n\n// check collision between circle and rectangle\nconst checkCollision = (circle: Circle, rect: Rectangle) => {\n\tif (\n\t\tcircle.x + circle.radius >= rect.x &&\n\t\tcircle.x - circle.radius <= rect.x + rect.width\n\t) {\n\t\tif (\n\t\t\tcircle.y + circle.radius >= rect.y &&\n\t\t\tcircle.y - circle.radius <= rect.y + rect.height\n\t\t) {\n\t\t\t// TODO: IMPROVE COLLISION CHECK\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// check if bird has touched a pipe\nconst touchedPipe = () => {\n\tconst birdHitbox: Circle = {\n\t\tx: birdX + constants.BIRD_WIDTH / 2,\n\t\ty: birdY + constants.BIRD_HEIGHT / 2 + 5,\n\t\tradius: 20,\n\t}\n\n\tconst upperPipe: Rectangle = {\n\t\tx: pipeX,\n\t\ty: 0,\n\t\twidth: constants.PIPE_WIDTH,\n\t\theight: pipeGapBottomY,\n\t}\n\n\tconst lowerPipe: Rectangle = {\n\t\tx: pipeX,\n\t\ty: pipeGapBottomY + constants.PIPE_GAP,\n\t\twidth: constants.PIPE_WIDTH,\n\t\theight:\n\t\t\tconstants.CANVAS_HEIGHT -\n\t\t\tconstants.HEIGHT_GROUND -\n\t\t\t(pipeGapBottomY + constants.PIPE_GAP),\n\t}\n\n\treturn (\n\t\tcheckCollision(birdHitbox, upperPipe) ||\n\t\tcheckCollision(birdHitbox, lowerPipe)\n\t)\n}\n\n// check if bird has touched the ground\nconst fallOut = () =>\n\tbirdY + constants.BIRD_HEIGHT >\n\tconstants.CANVAS_HEIGHT - constants.HEIGHT_GROUND\n\n// stop game\nconst reset = () => {\n\thasStarted = false\n\thasFinished = true\n}\n\nlet hasStarted = false\nlet hasFinished = false\nlet canGetScore = true\n\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n//==============================================================================\n\nconst Game: React.FC = () => {\n\tconst [showModal, setShowModal] = useState<boolean>(false)\n\tconst canvas = useRef<HTMLCanvasElement>(null)\n\n\t// bird jump\n\tconst jump = () => {\n\t\tif (hasFinished) {\n\t\t\treturn\n\t\t}\n\t\tif (!hasStarted) {\n\t\t\thasStarted = true\n\t\t}\n\t\tbirdYSpeed = constants.JUMP_SPEED\n\t}\n\n\t// enable space button\n\tconst handler = (key: any) => {\n\t\tif (hasFinished) {\n\t\t\treturn\n\t\t}\n\t\tif (key.code === 'Space') {\n\t\t\tif (!hasStarted) {\n\t\t\t\thasStarted = true\n\t\t\t}\n\t\t\tjump()\n\t\t}\n\t}\n\n\tuseEventListener('keypress', handler)\n\n\tconst draw = (context: CanvasRenderingContext2D) => {\n\t\t// draw background\n\t\tcontext.fillStyle = '#abfcff'\n\t\tcontext.fillRect(0, 0, constants.CANVAS_WIDTH, constants.CANVAS_HEIGHT)\n\n\t\t// draw clouds\n\t\tcontext.drawImage(\n\t\t\tconstants.CLOUDS,\n\t\t\tconstants.CLOUDS_X,\n\t\t\tconstants.CLOUDS_Y,\n\t\t\tconstants.CLOUDS_WIDTH,\n\t\t\tconstants.CLOUDS_HEIGHT\n\t\t)\n\n\t\t// draw ground\n\t\tcontext.drawImage(\n\t\t\tconstants.GROUND,\n\t\t\tgroundX,\n\t\t\tconstants.GROUND_Y,\n\t\t\tconstants.GROUND_WIDTH,\n\t\t\tconstants.GROUND_HEIGHT\n\t\t)\n\t\tcontext.drawImage(\n\t\t\tconstants.GROUND,\n\t\t\tgroundX + constants.CANVAS_WIDTH,\n\t\t\tconstants.GROUND_Y,\n\t\t\tconstants.GROUND_WIDTH,\n\t\t\tconstants.GROUND_HEIGHT\n\t\t)\n\n\t\t// draw bird\n\t\tcontext.drawImage(\n\t\t\tconstants.BIRD,\n\t\t\tbirdX,\n\t\t\tbirdY,\n\t\t\tconstants.BIRD_WIDTH,\n\t\t\tconstants.BIRD_HEIGHT\n\t\t)\n\n\t\t// draw pipes\n\t\tcontext.fillStyle = '#a6a6a6'\n\t\tcontext.fillRect(pipeX, 0, constants.PIPE_WIDTH, pipeGapBottomY)\n\t\tcontext.fillRect(\n\t\t\tpipeX,\n\t\t\tpipeGapBottomY + constants.PIPE_GAP,\n\t\t\tconstants.PIPE_WIDTH,\n\t\t\tconstants.CANVAS_HEIGHT -\n\t\t\t\tconstants.HEIGHT_GROUND -\n\t\t\t\t(pipeGapBottomY + constants.PIPE_GAP)\n\t\t)\n\t}\n\n\tuseEffect(() => {\n\t\tif (canvas.current) {\n\t\t\tconst context = canvas.current.getContext('2d')\n\t\t\tif (context) {\n\t\t\t\tsetInterval(() => {\n\t\t\t\t\t// dying\n\t\t\t\t\tif (touchedPipe() || fallOut()) {\n\t\t\t\t\t\tif (score > bestScore) {\n\t\t\t\t\t\t\tbestScore = score\n\t\t\t\t\t\t\tlocalStorage.setItem('bestScore', score.toString())\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetShowModal(true)\n\t\t\t\t\t\treset()\n\t\t\t\t\t}\n\n\t\t\t\t\t// check if we should give another score\n\t\t\t\t\tif (canGetScore && birdX > pipeX + constants.PIPE_WIDTH) {\n\t\t\t\t\t\tcanGetScore = false\n\t\t\t\t\t\tscore++\n\t\t\t\t\t}\n\n\t\t\t\t\tdraw(context)\n\n\t\t\t\t\tif (!hasStarted) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// reset pipes\n\t\t\t\t\tif (pipeX < -constants.PIPE_WIDTH) {\n\t\t\t\t\t\tpipeX = constants.CANVAS_WIDTH\n\t\t\t\t\t\tpipeGapBottomY = constants.PIPE_GAP * Math.random()\n\t\t\t\t\t\tcanGetScore = true\n\t\t\t\t\t}\n\n\t\t\t\t\t// reset ground\n\t\t\t\t\tif (groundX <= -constants.CANVAS_WIDTH) {\n\t\t\t\t\t\tgroundX = 0\n\t\t\t\t\t}\n\n\t\t\t\t\t// draw scores\n\t\t\t\t\tcontext.fillStyle = 'black'\n\t\t\t\t\tcontext.font = '26px Roboto'\n\t\t\t\t\tcontext.fillText(\n\t\t\t\t\t\tscore.toString(),\n\t\t\t\t\t\tconstants.CANVAS_WIDTH / 2 - 15,\n\t\t\t\t\t\t50\n\t\t\t\t\t)\n\n\t\t\t\t\t// movements\n\t\t\t\t\tpipeX -= constants.SPEED\n\t\t\t\t\tgroundX -= constants.SPEED\n\t\t\t\t\tbirdY += birdYSpeed * (constants.INTERVAL / 1000)\n\t\t\t\t\tbirdYSpeed -= constants.FALL_SPEED * (constants.INTERVAL / 1000)\n\t\t\t\t}, constants.INTERVAL)\n\t\t\t}\n\t\t}\n\t\t//TODO: А можно ли сюда добавить в массив isGame, и при изменении рефрешить не страницу а useEffect будет сам ресетить\n\t}, [])\n\n\treturn (\n\t\t<div>\n\t\t\t<div onClick={jump} onKeyPress={jump}>\n\t\t\t\t<canvas\n\t\t\t\t\tref={canvas}\n\t\t\t\t\twidth={constants.CANVAS_WIDTH}\n\t\t\t\t\theight={constants.CANVAS_HEIGHT}\n\t\t\t\t/>\n\t\t\t\t<EndPage showModal={showModal} score={score} bestScore={bestScore} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Game\n","import { HashRouter, Route, Routes } from 'react-router-dom'\nimport Login from '../components/Login'\nimport Menu from '../components/Menu'\nimport Game from './Game'\n\nfunction App() {\n\treturn (\n\t\t<HashRouter basename='/flappy-bird-app'>\n\t\t\t<Routes>\n\t\t\t\t<Route path='/' element={<Login />} />\n\t\t\t\t<Route path='/game' element={<Game />} />\n\t\t\t\t<Route path='/menu' element={<Menu />} />\n\t\t\t</Routes>\n\t\t</HashRouter>\n\t)\n}\n\nexport default App\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport actionSlice from './slices/actionSlice'\r\nimport userSlice from './slices/userSlice'\r\n\r\nconst rootReducer = combineReducers({\r\n\tuserSlice,\r\n\tactionSlice,\r\n})\r\n\r\nexport const setupStore = () => {\r\n\treturn configureStore({\r\n\t\treducer: rootReducer,\r\n\t})\r\n}\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppStore = ReturnType<typeof setupStore>\r\nexport type AppDispatch = AppStore['dispatch']\r\n","import { createRoot } from 'react-dom/client'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport './index.scss'\nimport { setupStore } from './store/store'\n\nconst store = setupStore()\n\nconst container = document.getElementById('root')!\nconst root = createRoot(container)\n\nroot.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n)\n"],"sourceRoot":""}